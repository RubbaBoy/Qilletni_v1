buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }

//    dependencyManagement {
//        imports {
//            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
//            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaNacosVersion}"
//            mavenBom "com.google.protobuf:protobuf-bom:${protobufVersion}"
//            mavenBom "com.google.guava:guava-bom:${guavaVersion}"
//            mavenBom "io.grpc:grpc-bom:${grpcVersion}"
//            mavenBom "org.junit:junit-bom:5.8.2"
//        }
//    }
}

plugins {
    id 'java'
    id 'idea'
    id 'com.google.protobuf'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.grpc:grpc-netty-shaded:1.46.0'
    implementation 'io.grpc:grpc-protobuf:1.46.0'
    implementation 'io.grpc:grpc-stub:1.46.0'

    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        implementation 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
    clean {
        delete generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

//eclipse {
//    classpath {
//        file.beforeMerged { cp ->
//            def generatedGrpcFolder = new org.gradle.plugins.ide.eclipse.model.SourceFolder('src/generated/main/grpc', null);
//            generatedGrpcFolder.entryAttributes['ignore_optional_problems'] = 'true';
//            cp.entries.add( generatedGrpcFolder );
//            def generatedJavaFolder = new org.gradle.plugins.ide.eclipse.model.SourceFolder('src/generated/main/java', null);
//            generatedJavaFolder.entryAttributes['ignore_optional_problems'] = 'true';
//            cp.entries.add( generatedJavaFolder );
//        }
//    }
//}

idea {
    module {
        sourceDirs += file('src/generated/main/java')
        sourceDirs += file('src/generated/main/grpc')
        generatedSourceDirs += file('src/generated/main/java')
        generatedSourceDirs += file('src/generated/main/grpc')
    }
}
